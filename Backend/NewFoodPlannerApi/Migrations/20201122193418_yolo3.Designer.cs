// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewFoodPlannerApi.Infrastructure.Database;

namespace NewFoodPlannerApi.Migrations
{
    [DbContext(typeof(FoodPlannerContext))]
    [Migration("20201122193418_yolo3")]
    partial class yolo3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("NewFoodPlannerApi.Model.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("NewFoodPlannerApi.Model.IngredientInRecipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("IngredientInRecipe");
                });

            modelBuilder.Entity("NewFoodPlannerApi.Model.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("NewFoodPlannerApi.Model.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("NewFoodPlannerApi.Model.RecipeInPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Portions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeInPlan");
                });

            modelBuilder.Entity("NewFoodPlannerApi.Model.IngredientInRecipe", b =>
                {
                    b.HasOne("NewFoodPlannerApi.Model.Ingredient", null)
                        .WithMany("ingredientInRecipes")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewFoodPlannerApi.Model.Recipe", null)
                        .WithMany("ingredientInRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewFoodPlannerApi.Model.RecipeInPlan", b =>
                {
                    b.HasOne("NewFoodPlannerApi.Model.Plan", null)
                        .WithMany("recipeInPlans")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewFoodPlannerApi.Model.Recipe", null)
                        .WithMany("recipeInPlans")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewFoodPlannerApi.Model.Ingredient", b =>
                {
                    b.Navigation("ingredientInRecipes");
                });

            modelBuilder.Entity("NewFoodPlannerApi.Model.Plan", b =>
                {
                    b.Navigation("recipeInPlans");
                });

            modelBuilder.Entity("NewFoodPlannerApi.Model.Recipe", b =>
                {
                    b.Navigation("ingredientInRecipes");

                    b.Navigation("recipeInPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
